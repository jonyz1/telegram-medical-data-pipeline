{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.10.4", "generated_at": "2025-07-14T09:56:26.478708Z", "invocation_id": "888cfca3-557d-4e03-b086-baf2da218e2e", "invocation_started_at": "2025-07-14T09:56:25.367396Z", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-14T09:56:26.414682Z", "completed_at": "2025-07-14T09:56:26.428642Z"}, {"name": "execute", "started_at": "2025-07-14T09:56:26.430257Z", "completed_at": "2025-07-14T09:56:26.430257Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02014613151550293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.telegram_data_warehouse.dim_dates", "compiled": true, "compiled_code": "\n\n-- Dimension table for time-based analysis\nWITH date_range AS (\n    SELECT generate_series(\n        '2025-01-01'::DATE,\n        '2025-12-31'::DATE,\n        INTERVAL '1 day'\n    ) AS date_day\n)\nSELECT\n    (EXTRACT(EPOCH FROM date_day)::BIGINT * 1000) AS date_id,\n    date_day,\n    EXTRACT(YEAR FROM date_day) AS year,\n    EXTRACT(MONTH FROM date_day) AS month,\n    EXTRACT(DAY FROM date_day) AS day,\n    EXTRACT(DOW FROM date_day) AS day_of_week,\n    EXTRACT(WEEK FROM date_day) AS week_of_year\nFROM date_range", "relation_name": "\"hello\".\"public_marts\".\"dim_dates\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-14T09:56:26.422276Z", "completed_at": "2025-07-14T09:56:26.431783Z"}, {"name": "execute", "started_at": "2025-07-14T09:56:26.433411Z", "completed_at": "2025-07-14T09:56:26.433411Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0217745304107666, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.telegram_data_warehouse.stg_image_detections", "compiled": true, "compiled_code": "\n\n-- Staging model to clean raw image detection data\nSELECT\n    message_id,\n    channel_name,\n    detected_object_class,\n    confidence_score,\n    processed_at\nFROM raw.image_detections\nWHERE confidence_score BETWEEN 0 AND 1  -- Ensure valid confidence scores", "relation_name": "\"hello\".\"public_staging\".\"stg_image_detections\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-14T09:56:26.425468Z", "completed_at": "2025-07-14T09:56:26.431783Z"}, {"name": "execute", "started_at": "2025-07-14T09:56:26.433888Z", "completed_at": "2025-07-14T09:56:26.433888Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022250652313232422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.telegram_data_warehouse.stg_telegram_messages", "compiled": true, "compiled_code": "-- \n\n-- -- Staging model to clean and extract fields from raw JSON data\n-- SELECT\n--     id AS message_id,\n--     channel_name,\n--     message_date::TIMESTAMP AS message_date,\n--     (message_data->>'text')::TEXT AS message_text,\n--     (message_data->>'sender_id')::BIGINT AS sender_id,\n--     (message_data->>'has_media')::BOOLEAN AS has_media,\n--     (message_data->>'media_type')::TEXT AS media_type,\n--     (message_data->>'media_path')::TEXT AS media_path,\n--     (message_data->>'caption')::TEXT AS caption,\n--     (message_data->>'is_reply')::BOOLEAN AS is_reply,\n--     (message_data->>'forwarded_from')::BIGINT AS forwarded_from,\n--     loaded_at\n-- FROM raw.telegram_messages\n\n\n\n\n\n-- Staging model to clean and extract fields from raw JSON data\nWITH numbered_messages AS (\n    SELECT\n        id AS message_id,\n        channel_name,\n        message_date::TIMESTAMP AS message_date,\n        (message_data->>'text')::TEXT AS message_text,\n        (message_data->>'sender_id')::BIGINT AS sender_id,\n        (message_data->>'has_media')::BOOLEAN AS has_media,\n        (message_data->>'media_type')::TEXT AS media_type,\n        (message_data->>'media_path')::TEXT AS media_path,\n        (message_data->>'caption')::TEXT AS caption,\n        (message_data->>'is_reply')::BOOLEAN AS is_reply,\n        (message_data->>'forwarded_from')::BIGINT AS forwarded_from,\n        loaded_at,\n        ROW_NUMBER() OVER (\n            PARTITION BY id, channel_name, message_date::DATE\n            ORDER BY loaded_at\n        ) AS row_num\n    FROM raw.telegram_messages\n)\n\nSELECT *\nFROM numbered_messages\nWHERE row_num = 1", "relation_name": "\"hello\".\"public_staging\".\"stg_telegram_messages\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-14T09:56:26.439676Z", "completed_at": "2025-07-14T09:56:26.447708Z"}, {"name": "execute", "started_at": "2025-07-14T09:56:26.447708Z", "completed_at": "2025-07-14T09:56:26.447708Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.009551763534545898, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.telegram_data_warehouse.valid_confidence_scores", "compiled": true, "compiled_code": "-- Custom test to ensure confidence scores are between 0 and 1\nSELECT\n    message_id,\n    detected_object_class,\n    confidence_score\nFROM \"hello\".\"public_staging\".\"stg_image_detections\"\nWHERE confidence_score < 0 OR confidence_score > 1", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-14T09:56:26.444697Z", "completed_at": "2025-07-14T09:56:26.447708Z"}, {"name": "execute", "started_at": "2025-07-14T09:56:26.447708Z", "completed_at": "2025-07-14T09:56:26.447708Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.009551763534545898, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.telegram_data_warehouse.dim_channels", "compiled": true, "compiled_code": "\n\n-- Dimension table for Telegram channels\nWITH source AS (\n    SELECT DISTINCT channel_name\n    FROM \"hello\".\"public_staging\".\"stg_telegram_messages\"\n)\nSELECT\n    ROW_NUMBER() OVER () AS channel_id,\n    channel_name\nFROM source", "relation_name": "\"hello\".\"public_marts\".\"dim_channels\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-14T09:56:26.447708Z", "completed_at": "2025-07-14T09:56:26.447708Z"}, {"name": "execute", "started_at": "2025-07-14T09:56:26.447708Z", "completed_at": "2025-07-14T09:56:26.447708Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008032083511352539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.telegram_data_warehouse.no_duplicate_messages", "compiled": true, "compiled_code": "-- Custom test to ensure no duplicate messages per channel and date\nSELECT\n    message_id,\n    channel_name,\n    message_date::DATE,\n    COUNT(*) AS cnt\nFROM \"hello\".\"public_staging\".\"stg_telegram_messages\"\nGROUP BY message_id, channel_name, message_date::DATE\nHAVING COUNT(*) > 1", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-14T09:56:26.447708Z", "completed_at": "2025-07-14T09:56:26.463380Z"}, {"name": "execute", "started_at": "2025-07-14T09:56:26.464072Z", "completed_at": "2025-07-14T09:56:26.464072Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.016364097595214844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.telegram_data_warehouse.fct_messages", "compiled": true, "compiled_code": "\n\n-- Fact table for Telegram messages, linking to dim_channels and dim_dates\n-- Contains metrics like message_length and supports analysis of visual content and trends\nWITH messages AS (\n    SELECT\n        m.message_id,\n        m.channel_name,\n        m.message_date,\n        m.message_text,\n        m.sender_id,\n        m.has_media,\n        m.media_type,\n        m.media_path,\n        m.caption,\n        m.is_reply,\n        m.forwarded_from,\n        LENGTH(COALESCE(m.message_text, '')) AS message_length,\n        c.channel_id,\n        (EXTRACT(EPOCH FROM m.message_date)::BIGINT * 1000) AS date_id\n    FROM \"hello\".\"public_staging\".\"stg_telegram_messages\" m\n    LEFT JOIN \"hello\".\"public_marts\".\"dim_channels\" c\n        ON m.channel_name = c.channel_name\n)\nSELECT\n    (channel_id || '-' || message_id || '-' || date_id)::TEXT AS message_key,\n    channel_id,\n    date_id,\n    message_id,\n    message_text,\n    sender_id,\n    has_media,\n    media_type,\n    media_path,\n    caption,\n    is_reply,\n    forwarded_from,\n    message_length\nFROM messages", "relation_name": "\"hello\".\"public_marts\".\"fct_messages\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-14T09:56:26.467531Z", "completed_at": "2025-07-14T09:56:26.467531Z"}, {"name": "execute", "started_at": "2025-07-14T09:56:26.467531Z", "completed_at": "2025-07-14T09:56:26.467531Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0034584999084472656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.telegram_data_warehouse.fct_image_detections", "compiled": true, "compiled_code": "\n\n-- Fact table for image detections, linking to fct_messages and dim_channels\nWITH detections AS (\n    SELECT\n        d.message_id,\n        d.channel_name,\n        d.detected_object_class,\n        d.confidence_score,\n        d.processed_at,\n        c.channel_id\n    FROM \"hello\".\"public_staging\".\"stg_image_detections\" d\n    JOIN \"hello\".\"public_marts\".\"dim_channels\" c\n        ON d.channel_name = c.channel_name\n)\nSELECT\n    (d.channel_id || '-' || d.message_id || '-' || d.detected_object_class || '-' || d.processed_at)::TEXT AS detection_key,\n    d.channel_id,\n    d.message_id,\n    d.detected_object_class,\n    d.confidence_score,\n    d.processed_at\nFROM detections d\nJOIN \"hello\".\"public_marts\".\"fct_messages\" m\n    ON d.message_id = m.message_id\n    AND d.channel_id = m.channel_id", "relation_name": "\"hello\".\"public_marts\".\"fct_image_detections\"", "batch_results": null}], "elapsed_time": 0.30397820472717285, "args": {"profiles_dir": "C:\\Users\\HP ENVY\\Desktop\\weak7\\dbt", "show_resource_report": false, "show_all_deprecations": false, "populate_cache": true, "strict_mode": false, "static_parser": true, "favor_state": false, "exclude": [], "warn_error_options": {"error": [], "warn": [], "silence": []}, "compile": true, "require_explicit_package_overrides_for_builtin_materializations": true, "skip_nodes_if_on_run_start_fails": false, "require_all_warnings_handled_by_warn_error": false, "require_nested_cumulative_type_params": false, "require_yaml_configuration_for_mf_time_spines": false, "use_fast_test_edges": false, "version_check": true, "defer": false, "log_path": "C:\\Users\\HP ENVY\\Desktop\\weak7\\dbt\\logs", "macro_debugging": false, "require_resource_names_without_spaces": true, "send_anonymous_usage_stats": true, "cache_selected_only": false, "invocation_command": "dbt docs generate", "project_dir": "C:\\Users\\HP ENVY\\Desktop\\weak7\\dbt", "log_format": "default", "log_format_file": "debug", "use_colors_file": true, "which": "generate", "log_level_file": "debug", "indirect_selection": "eager", "print": true, "write_json": true, "introspect": true, "static": false, "state_modified_compare_more_unrendered_values": false, "printer_width": 80, "source_freshness_run_project_hooks": true, "state_modified_compare_vars": false, "partial_parse_file_diff": true, "use_colors": true, "quiet": false, "upload_to_artifacts_ingest_api": false, "log_file_max_bytes": 10485760, "require_batched_execution_for_custom_microbatch_strategy": false, "partial_parse": true, "vars": {}, "log_level": "info", "select": [], "validate_macro_args": false, "empty_catalog": false}}